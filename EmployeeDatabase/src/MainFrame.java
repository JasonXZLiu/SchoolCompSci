import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.border.TitledBorder;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 529483
 */

public class MainFrame extends javax.swing.JFrame{
    private AddEmployeeFrame addEmployeeFrame; 
    private SearchEmployeeFrame searchEmployeeFrame; 
    private DisplayEmployeeFrame displayEmployeeFrame; 
    protected static MyHashTable hashTable = new MyHashTable(5);
    private static Font headerFont = new Font("Corbel", Font.BOLD, 32);
    private static Font plainFont = new Font("Corbel", Font.PLAIN, 20);
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        statusLabel.setText("You have " + hashTable.getSize() + " employees in the database.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setFont(headerFont);
        titleLabel.setText("employee database");

        removeButton.setBackground(new java.awt.Color(86, 101, 115));
        removeButton.setFont(plainFont);
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("remove");
        removeButton.setToolTipText("");
        removeButton.setBorder(null);
        removeButton.setBorderPainted(false);
        removeButton.setContentAreaFilled(false);
        removeButton.setOpaque(true);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        statusLabel.setFont(plainFont);
        statusLabel.setText("jLabel2");
        statusLabel.setMaximumSize(new java.awt.Dimension(20, 20));
        statusLabel.setMinimumSize(new java.awt.Dimension(20, 20));
        statusLabel.setPreferredSize(new java.awt.Dimension(20, 30));

        searchButton.setBackground(new java.awt.Color(86, 101, 115));
        searchButton.setFont(plainFont);
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("search");
        searchButton.setToolTipText("");
        searchButton.setBorder(null);
        searchButton.setContentAreaFilled(false);
        searchButton.setOpaque(true);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        displayButton.setBackground(new java.awt.Color(86, 101, 115));
        displayButton.setFont(plainFont);
        displayButton.setForeground(new java.awt.Color(255, 255, 255));
        displayButton.setText("display");
        displayButton.setToolTipText("");
        displayButton.setBorder(null);
        displayButton.setContentAreaFilled(false);
        displayButton.setOpaque(true);
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(86, 101, 115));
        addButton.setFont(plainFont);
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("add");
        addButton.setToolTipText("");
        addButton.setBorder(null);
        addButton.setBorderPainted(false);
        addButton.setContentAreaFilled(false);
        addButton.setOpaque(true);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(displayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        searchEmployeeFrame = new SearchEmployeeFrame();
        searchEmployeeFrame.searchFrameLabel.setText("remove employee");
        searchEmployeeFrame.setVisible(true);
        searchEmployeeFrame.submitButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed (ActionEvent e) {
               searchEmployeeFrame.setValues();
               if(searchEmployeeFrame.empNumber == -1 || hashTable.removeEmployee(searchEmployeeFrame.empNumber) == null) {
                   searchEmployeeFrame.displayError();
               } else {
                   updateText();
                   searchEmployeeFrame.dispose();
               }
            }
        });
    }//GEN-LAST:event_removeButtonActionPerformed

    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        searchEmployeeFrame = new SearchEmployeeFrame();
        searchEmployeeFrame.searchFrameLabel.setText("search employee");
        searchEmployeeFrame.setVisible(true);
        searchEmployeeFrame.submitButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed (ActionEvent e) {
                searchEmployeeFrame.setValues();
                if(searchEmployeeFrame.empNumber == -1 || hashTable.searchByEmployeeNumber(searchEmployeeFrame.empNumber) == null) {
                   searchEmployeeFrame.displayError();
               } else {
                   EmployeeInfo employee = hashTable.searchByEmployeeNumber(searchEmployeeFrame.empNumber);
                   displaySearchedEmployee(employee);
                   searchEmployeeFrame.dispose();
               }
            }
        });
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void displaySearchedEmployee(EmployeeInfo e) {
        displayEmployeeFrame = new DisplayEmployeeFrame(e);
        displayEmployeeFrame.setVisible(true);
    }
    
    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        displayEmployeeFrame = new DisplayEmployeeFrame(hashTable);
        displayEmployeeFrame.setVisible(true);
        displayEmployeeFrame.editButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed (ActionEvent e) {
                int blah = displayEmployeeFrame.checkForSelected();
                if(blah != -1) {
                    editEmployee(blah);
                    displayEmployeeFrame.dispose();
                }
            }
        });
    }//GEN-LAST:event_displayButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        addEmployeeFrame = new AddEmployeeFrame(false, null);
        addEmployeeFrame.setVisible(true);
        addEmployeeFrame.submitButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed (ActionEvent e) {
                addEmployeeFrame.setValues();
                if(!addEmployeeFrame.checkError()) {
                    addToDatabase();
                    updateText();
                    addEmployeeFrame.dispose();
                } else {
                    addEmployeeFrame.error[1] = hashTable.search(addEmployeeFrame.empNumber);
                }
            }
        });
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateText() {
        statusLabel.setText("You have " + hashTable.getSize() + " employees in the database.");
    }
    
    private void addToDatabase() {
        if(addEmployeeFrame.type) {
            PartTimeEmployee employee = addEmployeeFrame.createPartTimeEmployee();
            hashTable.addEmployee(employee);
        } else {
            FullTimeEmployee employee = addEmployeeFrame.createFullTimeEmployee();
            hashTable.addEmployee(employee);
        }
    }

    public void editEmployee(int i) {
        EmployeeInfo e = hashTable.searchByEmployeeNumber(i);
        addEmployeeFrame = new AddEmployeeFrame(true, e);
        addEmployeeFrame.setVisible(true);
        addEmployeeFrame.submitButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed (ActionEvent e) {
                addEmployeeFrame.setValues();
                if(!addEmployeeFrame.checkError()) {
                    addToDatabase();
                    updateText();
                    addEmployeeFrame.dispose();
                } else {
                    addEmployeeFrame.error[1] = hashTable.search(addEmployeeFrame.empNumber);
                }
            }
        });
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {                
                    hashTable.importData();
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
//                try {
//                    for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
//                      if ("Nimbus".equals(info.getName())) {
//                        UIManager.put("nimbusBase",new Color(0xBB,0xC3,0xFF));
//                        UIManager.put("TitledBorder.position",TitledBorder.CENTER);
//                        UIManager.put("nimbusBlueGrey",new Color(0xD1,0xD1,0xD1));
//                        UIManager.put("control",new Color(0xFA,0xFA,0xFA));
//                        UIManager.put("Button.defaultButtonFollowsFocus",Boolean.TRUE);
//                        UIManager.setLookAndFeel(info.getClassName());
//                        break;
//                      }
//                    }
//                  }
//                 catch (Exception e) {
//                }
                final MainFrame mainFrame = new MainFrame();
                mainFrame.setDefaultCloseOperation(MainFrame.DO_NOTHING_ON_CLOSE);
                mainFrame.addWindowListener( new WindowAdapter() {
                    @Override
                    public void windowClosing(WindowEvent we) {
                        if(hashTable.exportData()) mainFrame.dispose();
                    }
                } );
                mainFrame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton displayButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
